//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// The WeChatConfigSection Configuration Section.
    /// </summary>
    public partial class WeChatConfigSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the WeChatConfigSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string WeChatConfigSectionSectionName = "WeChat";
        
        /// <summary>
        /// Gets the WeChatConfigSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::Nlab.WeChatApi.Config.WeChatConfigSection Instance
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.WeChatConfigSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Nlab.WeChatApi.Config.WeChatConfigSection.WeChatConfigSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.WeChatConfigSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.WeChatConfigSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ReplyModules Property
        /// <summary>
        /// The XML name of the <see cref="ReplyModules"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ReplyModulesPropertyName = "replyModules";
        
        /// <summary>
        /// Gets or sets the ReplyModules.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The ReplyModules.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.WeChatConfigSection.ReplyModulesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Nlab.WeChatApi.Config.ReplyModulesCollection ReplyModules
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ReplyModulesCollection)(base[global::Nlab.WeChatApi.Config.WeChatConfigSection.ReplyModulesPropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.WeChatConfigSection.ReplyModulesPropertyName] = value;
            }
        }
        #endregion
        
        #region ReplySettings Property
        /// <summary>
        /// The XML name of the <see cref="ReplySettings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ReplySettingsPropertyName = "replySettings";
        
        /// <summary>
        /// Gets or sets the ReplySettings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The ReplySettings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.WeChatConfigSection.ReplySettingsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Nlab.WeChatApi.Config.ReplySettingCollection ReplySettings
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ReplySettingCollection)(base[global::Nlab.WeChatApi.Config.WeChatConfigSection.ReplySettingsPropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.WeChatConfigSection.ReplySettingsPropertyName] = value;
            }
        }
        #endregion
        
        #region Templates Property
        /// <summary>
        /// The XML name of the <see cref="Templates"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string TemplatesPropertyName = "templates";
        
        /// <summary>
        /// Gets or sets the Templates.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Templates.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.WeChatConfigSection.TemplatesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Nlab.WeChatApi.Config.TemplateCollection Templates
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.TemplateCollection)(base[global::Nlab.WeChatApi.Config.WeChatConfigSection.TemplatesPropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.WeChatConfigSection.TemplatesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// A collection of ReplyModulesCollectionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Nlab.WeChatApi.Config.ReplyModulesCollection.ReplyModulesCollectionElementPropertyName)]
    public partial class ReplyModulesCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ReplyModulesCollectionElementPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Nlab.WeChatApi.Config.ReplyModulesCollection.ReplyModulesCollectionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Nlab.WeChatApi.Config.ReplyModulesCollection.ReplyModulesCollectionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement)(element)).ModuleName;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement this[int index]
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement this[object name]
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement add)
        {
            base.BaseAdd(add);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement add)
        {
            base.BaseRemove(this.GetElementKey(add));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement GetItemAt(int index)
        {
            return ((global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement GetItemByKey(string name)
        {
            return ((global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// The ReplyModulesCollectionElement Configuration Element.
    /// </summary>
    public partial class ReplyModulesCollectionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ModuleName Property
        /// <summary>
        /// The XML name of the <see cref="ModuleName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ModuleNamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the ModuleName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The ModuleName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement.ModuleNamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string ModuleName
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement.ModuleNamePropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement.ModuleNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement.TypePropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ReplyModulesCollectionElement.TypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// A collection of ReplySettingCollectionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Nlab.WeChatApi.Config.ReplySettingCollectionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Nlab.WeChatApi.Config.ReplySettingCollection.ReplySettingCollectionElementPropertyName)]
    public partial class ReplySettingCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ReplySettingCollectionElementPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Nlab.WeChatApi.Config.ReplySettingCollection.ReplySettingCollectionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Nlab.WeChatApi.Config.ReplySettingCollection.ReplySettingCollectionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Nlab.WeChatApi.Config.ReplySettingCollectionElement)(element)).MatchText;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Nlab.WeChatApi.Config.ReplySettingCollectionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ReplySettingCollectionElement this[int index]
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ReplySettingCollectionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> with the specified key.
        /// </summary>
        /// <param name="matches">The key of the <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ReplySettingCollectionElement this[object matches]
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ReplySettingCollectionElement)(base.BaseGet(matches)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Nlab.WeChatApi.Config.ReplySettingCollectionElement add)
        {
            base.BaseAdd(add);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Nlab.WeChatApi.Config.ReplySettingCollectionElement add)
        {
            base.BaseRemove(this.GetElementKey(add));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ReplySettingCollectionElement GetItemAt(int index)
        {
            return ((global::Nlab.WeChatApi.Config.ReplySettingCollectionElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> with the specified key.
        /// </summary>
        /// <param name="matches">The key of the <see cref="global::Nlab.WeChatApi.Config.ReplySettingCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ReplySettingCollectionElement GetItemByKey(string matches)
        {
            return ((global::Nlab.WeChatApi.Config.ReplySettingCollectionElement)(base.BaseGet(((object)(matches)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// The ReplySettingCollectionElement Configuration Element.
    /// </summary>
    public partial class ReplySettingCollectionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ModuleName Property
        /// <summary>
        /// The XML name of the <see cref="ModuleName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ModuleNamePropertyName = "moduleName";
        
        /// <summary>
        /// Gets or sets the ModuleName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The ModuleName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.ModuleNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string ModuleName
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.ModuleNamePropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.ModuleNamePropertyName] = value;
            }
        }
        #endregion
        
        #region MatchText Property
        /// <summary>
        /// The XML name of the <see cref="MatchText"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string MatchTextPropertyName = "matches";
        
        /// <summary>
        /// Gets or sets the MatchText.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The MatchText.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.MatchTextPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string MatchText
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.MatchTextPropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.MatchTextPropertyName] = value;
            }
        }
        #endregion
        
        #region MatchType Property
        /// <summary>
        /// The XML name of the <see cref="MatchType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string MatchTypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the MatchType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The MatchType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.MatchTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string MatchType
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.MatchTypePropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.MatchTypePropertyName] = value;
            }
        }
        #endregion
        
        #region StartWith Property
        /// <summary>
        /// The XML name of the <see cref="StartWith"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string StartWithPropertyName = "startWith";
        
        /// <summary>
        /// Gets or sets the StartWith.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The StartWith.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.StartWithPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string StartWith
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.StartWithPropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.StartWithPropertyName] = value;
            }
        }
        #endregion
        
        #region Parameters Property
        /// <summary>
        /// The XML name of the <see cref="Parameters"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ParametersPropertyName = "parameters";
        
        /// <summary>
        /// Gets or sets the Parameters.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Parameters.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.ParametersPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Nlab.WeChatApi.Config.ParametersCollection Parameters
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ParametersCollection)(base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.ParametersPropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ReplySettingCollectionElement.ParametersPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// A collection of ParameterCollectionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Nlab.WeChatApi.Config.ParameterCollectionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Nlab.WeChatApi.Config.ParametersCollection.ParameterCollectionElementPropertyName)]
    public partial class ParametersCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ParameterCollectionElementPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Nlab.WeChatApi.Config.ParametersCollection.ParameterCollectionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Nlab.WeChatApi.Config.ParametersCollection.ParameterCollectionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Nlab.WeChatApi.Config.ParameterCollectionElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Nlab.WeChatApi.Config.ParameterCollectionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ParameterCollectionElement this[int index]
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ParameterCollectionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ParameterCollectionElement this[object name]
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.ParameterCollectionElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Nlab.WeChatApi.Config.ParameterCollectionElement add)
        {
            base.BaseAdd(add);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Nlab.WeChatApi.Config.ParameterCollectionElement add)
        {
            base.BaseRemove(this.GetElementKey(add));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ParameterCollectionElement GetItemAt(int index)
        {
            return ((global::Nlab.WeChatApi.Config.ParameterCollectionElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Nlab.WeChatApi.Config.ParameterCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.ParameterCollectionElement GetItemByKey(string name)
        {
            return ((global::Nlab.WeChatApi.Config.ParameterCollectionElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// The ParameterCollectionElement Configuration Element.
    /// </summary>
    public partial class ParameterCollectionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ParameterCollectionElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.ParameterCollectionElement.NamePropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ParameterCollectionElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.ParameterCollectionElement.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.ParameterCollectionElement.ValuePropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.ParameterCollectionElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// A collection of TemplateCollectionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Nlab.WeChatApi.Config.TemplateCollectionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Nlab.WeChatApi.Config.TemplateCollection.TemplateCollectionElementPropertyName)]
    public partial class TemplateCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string TemplateCollectionElementPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Nlab.WeChatApi.Config.TemplateCollection.TemplateCollectionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Nlab.WeChatApi.Config.TemplateCollection.TemplateCollectionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Nlab.WeChatApi.Config.TemplateCollectionElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Nlab.WeChatApi.Config.TemplateCollectionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.TemplateCollectionElement this[int index]
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.TemplateCollectionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.TemplateCollectionElement this[object name]
        {
            get
            {
                return ((global::Nlab.WeChatApi.Config.TemplateCollectionElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Nlab.WeChatApi.Config.TemplateCollectionElement add)
        {
            base.BaseAdd(add);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Nlab.WeChatApi.Config.TemplateCollectionElement add)
        {
            base.BaseRemove(this.GetElementKey(add));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.TemplateCollectionElement GetItemAt(int index)
        {
            return ((global::Nlab.WeChatApi.Config.TemplateCollectionElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Nlab.WeChatApi.Config.TemplateCollectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Nlab.WeChatApi.Config.TemplateCollectionElement GetItemByKey(string name)
        {
            return ((global::Nlab.WeChatApi.Config.TemplateCollectionElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Nlab.WeChatApi.Config
{
    
    
    /// <summary>
    /// The TemplateCollectionElement Configuration Element.
    /// </summary>
    public partial class TemplateCollectionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.TemplateCollectionElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.TemplateCollectionElement.NamePropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.TemplateCollectionElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.TemplateCollectionElement.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.TemplateCollectionElement.ValuePropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.TemplateCollectionElement.ValuePropertyName] = value;
            }
        }
        #endregion
        
        #region Filepath Property
        /// <summary>
        /// The XML name of the <see cref="Filepath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string FilepathPropertyName = "filepath";
        
        /// <summary>
        /// Gets or sets the Filepath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Filepath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Nlab.WeChatApi.Config.TemplateCollectionElement.FilepathPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Filepath
        {
            get
            {
                return ((string)(base[global::Nlab.WeChatApi.Config.TemplateCollectionElement.FilepathPropertyName]));
            }
            set
            {
                base[global::Nlab.WeChatApi.Config.TemplateCollectionElement.FilepathPropertyName] = value;
            }
        }
        #endregion
    }
}
